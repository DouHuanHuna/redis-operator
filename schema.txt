apiVersion: redis.k8s.io/v1
kind: RedisOperator
metadata:
    name: string
    namespace: string default "redis-operator"
spec:
    settings: v1.RedisSettings
    resources: core.v1.ResourceRequirements
states:
    state: string enum: Pending | Running | Succeeded | Failed
---
type Metrics struct {
    enable: boolean default false
    image: string
    pullPolicy: string enum: Always | IfNotPresent | Never
    port: int
}
---
type AuthSettings struct {
    password: string
    secret: string
}
---
type RedisSettings struct {
    model: string enum: Cluster | Sentinel | Standalone | MasterSlave
    config: map[string]string
    auth: *v1.AuthSettings
    image: string
    pullPolicy: string enum: Always | IfNotPresent | Never
    metrics: v1.Metrics
    standalone: v1.StandaloneSettings
    cluster: v1.ClusterSettings
    sentinel: v1.SentinelSettings
    Affinity: corev1.Affinity
    SecurityContext: corev1.SecurityContext
    InitCommand: string
}
---
type StandaloneSettings struct {

}

type Storage struct {
	KeepAfterDelete     bool                         `json:"keepAfterDelete,omitempty"`
	VolumeClaimTemplate corev1.PersistentVolumeClaim `json:"volumeClaimTemplate,omitempty"`
	VolumeMount         AdditionalVolume             `json:"volumeMount,omitempty"`
}

---
type ClusterSettings struct {
    replicas: int
}

---
type SentinelSettings struct {
    replicas: int
}

---
type MasterSlaveSettings struct {
    MasterCount: int
    SlaveCount: int
}